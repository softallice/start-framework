# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '2'

volumes:
  {ORD_NAME0}.{DOMAIN_NAME}:
  {PEER_NAME0}.{ORG_1}.{DOMAIN_NAME}:
  {PEER_NAME1}.{ORG_1}.{DOMAIN_NAME}:
  {PEER_NAME0}.{ORG_2}.{DOMAIN_NAME}:
  {PEER_NAME1}.{ORG_2}.{DOMAIN_NAME}:
  {ORD_NAME4}.{DOMAIN_NAME}:
  {ORD_NAME3}.{DOMAIN_NAME}:
  {ORD_NAME2}.{DOMAIN_NAME}:
  {ORD_NAME1}.{DOMAIN_NAME}:
  {PEER_NAME0}.{ORG_3}.{DOMAIN_NAME}:
  {PEER_NAME1}.{ORG_3}.{DOMAIN_NAME}:



networks:
  hlfnet:

services:

  {CA_ORG1}.{DOMAIN_NAME}:
    extends:
      file: base/ca-base.yaml
      service: ca-base
    container_name: {CA_ORG1}.{DOMAIN_NAME}
    networks:
      - hlfnet

  {ORD_NAME0}.{DOMAIN_NAME}:
    extends:
      file: base/docker-compose-base.yaml
      service: {ORD_NAME0}.{DOMAIN_NAME}
    container_name: {ORD_NAME0}.{DOMAIN_NAME}
    networks:
      - hlfnet

  {PEER_NAME0}.{ORG_1}.{DOMAIN_NAME}:
    container_name: {PEER_NAME0}.{ORG_1}.{DOMAIN_NAME}
    extends:
      file:  base/docker-compose-base.yaml
      service: {PEER_NAME0}.{ORG_1}.{DOMAIN_NAME}
    depends_on:
      - couchdb0
    networks:
      - hlfnet

  {PEER_NAME1}.{ORG_1}.{DOMAIN_NAME}:
    container_name: {PEER_NAME1}.{ORG_1}.{DOMAIN_NAME}
    extends:
      file:  base/docker-compose-base.yaml
      service: {PEER_NAME1}.{ORG_1}.{DOMAIN_NAME}
    depends_on:
      - couchdb1
    networks:
      - hlfnet

  {PEER_NAME0}.{ORG_2}.{DOMAIN_NAME}:
    container_name: {PEER_NAME0}.{ORG_2}.{DOMAIN_NAME}
    extends:
      file:  base/docker-compose-base.yaml
      service: {PEER_NAME0}.{ORG_2}.{DOMAIN_NAME}
    depends_on:
      - couchdb2
    networks:
      - hlfnet

  {PEER_NAME1}.{ORG_2}.{DOMAIN_NAME}:
    container_name: {PEER_NAME1}.{ORG_2}.{DOMAIN_NAME}
    extends:
      file:  base/docker-compose-base.yaml
      service: {PEER_NAME1}.{ORG_2}.{DOMAIN_NAME}
    depends_on:
      - couchdb3
    networks:
      - hlfnet

  couchdb0:
    container_name: couchdb0
    image: couchdb:$DBIMAGE_TAG
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=password
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "5984:5984"
    networks:
      - hlfnet

  couchdb1:
    container_name: couchdb1
    image: couchdb:$DBIMAGE_TAG
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=password
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "6984:5984"
    networks:
      - hlfnet


  couchdb2:
    container_name: couchdb2
    image: couchdb:$DBIMAGE_TAG
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=password
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "7984:5984"
    networks:
      - hlfnet

  couchdb3:
    container_name: couchdb3
    image: couchdb:$DBIMAGE_TAG
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=password
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "6884:5984"
    networks:
      - hlfnet


  cli:
    container_name: cli
    image: hyperledger/fabric-tools:$IMAGE_TAG
    tty: true
    stdin_open: true
    environment:
      - SYS_CHANNEL=$SYS_CHANNEL
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      #- FABRIC_LOGGING_SPEC=DEBUG
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS={PEER_NAME0}.{ORG_1}.{DOMAIN_NAME}:7051
      - CORE_PEER_LOCALMSPID={ORG_1_C}MSP
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/{ORG_1}.{DOMAIN_NAME}/peers/{PEER_NAME0}.{ORG_1}.{DOMAIN_NAME}/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/{ORG_1}.{DOMAIN_NAME}/peers/{PEER_NAME0}.{ORG_1}.{DOMAIN_NAME}/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/{ORG_1}.{DOMAIN_NAME}/peers/{PEER_NAME0}.{ORG_1}.{DOMAIN_NAME}/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/{ORG_1}.{DOMAIN_NAME}/users/Admin@{ORG_1}.{DOMAIN_NAME}/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ./../chaincode/:/opt/gopath/src/github.com/chaincode
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
        - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
    depends_on:
      - {ORD_NAME0}.{DOMAIN_NAME}
      - {PEER_NAME0}.{ORG_1}.{DOMAIN_NAME}
      - {PEER_NAME1}.{ORG_1}.{DOMAIN_NAME}
      - {PEER_NAME0}.{ORG_2}.{DOMAIN_NAME}
      - {PEER_NAME1}.{ORG_2}.{DOMAIN_NAME}
    networks:
      - hlfnet
# <!-- BEGIN Peer0 - Adding  -->
  {PEER_NAME0}.{ORG_3}.{DOMAIN_NAME}:
      container_name: {PEER_NAME0}.{ORG_3}.{DOMAIN_NAME}
      extends:
        file:  base/docker-compose-base.yaml
        service: {PEER_NAME0}.{ORG_3}.{DOMAIN_NAME}
      depends_on:
        - couchdb2
      networks:
        - hlfnet
# <!-- END Peer0 - Adding  -->
# <!-- BEGIN Peer1 - Adding  -->
  {PEER_NAME1}.{ORG_3}.{DOMAIN_NAME}:
      container_name: {PEER_NAME1}.{ORG_3}.{DOMAIN_NAME}
      extends:
        file:  base/docker-compose-base.yaml
        service: {PEER_NAME1}.{ORG_3}.{DOMAIN_NAME}
      depends_on:
        - couchdb3
      networks:
        - hlfnet
# <!-- END Peer1 - Adding  -->
